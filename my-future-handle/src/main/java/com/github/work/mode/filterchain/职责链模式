职责链模式

可借助于org.apache.commons.chain.impl.ChainBase、org.apache.commons.chain.Command、org.apache.commons.chain.impl.ContextBase等这些apache提供的职责类来便捷实现

适用场景：
    有多个节点可以处理某类请求，哪个节点来处理运行时自动确定
    在不明确接收者的情形下向多个节点提交一个请求
    动态指定一组功能节点

特性：
    请求在链路上传递，直到被某个节点处理或抵达链路尽头；
    发起方并不知晓最终被哪个节点处理，因此系统可以在发起方无感知的情况下动态重新组织链路和分配责任。

模式组成：
    功能节点（处理方）抽象角色：定义一个处理接口和【可选】的后继节点链接
    具体功能节点：处理其负责的请求，如果不能处理则传递给后继节点
    请求发起方

优点：
    降低耦合度
    灵活，可运行时动态变更职责链

缺点：
    性能损失，不太便于调试，可能会造成循环调用，不能保证请求一定会被处理（不纯粹的职责链）、

分类：
    纯粹的职责链：每个职责节点只能对请求做出以下两种行为之一：自己完全处理；传递给下一节点处理。不允许出现自己承担部分职责后又将请求下放的情形；请求必然会被某个节点处理。
    不纯粹的职责链：请求可能最终没被处理